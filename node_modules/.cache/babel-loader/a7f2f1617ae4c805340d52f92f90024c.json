{"ast":null,"code":"import _classCallCheck from\"/Users/daniel/seasons/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/daniel/seasons/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/daniel/seasons/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/daniel/seasons/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/daniel/seasons/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import ReactDOM from\"react-dom\";import SeasonDisplay from\"./SeasonDisplay\";import Spinner from\"./Spinner\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);function App(){var _getPrototypeOf2;var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(App)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={lat:null,errorMessage:\"\"};return _this;}_createClass(App,[{key:\"componentDidMount\",// constructor(props) {\n//   super(props);\n//   this.state = { lat: null, errorMessage: \"\" };\n// }\nvalue:function componentDidMount(){var _this2=this;window.navigator.geolocation.getCurrentPosition(function(position){return _this2.setState({lat:position.coords.latitude});},function(err){return _this2.setState({errorMessage:err.message});});}},{key:\"renderContent\",value:function renderContent(){if(this.state.errorMessage&&!this.state.lat){return React.createElement(\"div\",null,\"Error: \",this.state.errorMessage);}if(!this.state.errorMessage&&this.state.lat){// return <div>Latitude: {this.state.lat}</div>;\nreturn React.createElement(SeasonDisplay,{lat:this.state.lat});}return React.createElement(Spinner,{message:\"Please accept location request\"});}},{key:\"render\",value:function render(){return React.createElement(\"div\",{className:\"border red\"},this.renderContent());}}]);return App;}(React.Component);ReactDOM.render(React.createElement(App,null),document.querySelector(\"#root\"));","map":{"version":3,"sources":["/Users/daniel/seasons/src/index.js"],"names":["React","ReactDOM","SeasonDisplay","Spinner","App","state","lat","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","renderContent","Component","render","document","querySelector"],"mappings":"shBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,C,GAEMC,CAAAA,G,+XACJC,K,CAAQ,CAAEC,GAAG,CAAE,IAAP,CAAaC,YAAY,CAAE,EAA3B,C,0DACR;AACA;AACA;AACA;kCAEoB,iBAClBC,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACE,SAAAC,QAAQ,QAAI,CAAA,MAAI,CAACC,QAAL,CAAc,CAAEP,GAAG,CAAEM,QAAQ,CAACE,MAAT,CAAgBC,QAAvB,CAAd,CAAJ,EADV,CAEE,SAAAC,GAAG,QAAI,CAAA,MAAI,CAACH,QAAL,CAAc,CAAEN,YAAY,CAAES,GAAG,CAACC,OAApB,CAAd,CAAJ,EAFL,EAID,C,qDACe,CACd,GAAI,KAAKZ,KAAL,CAAWE,YAAX,EAA2B,CAAC,KAAKF,KAAL,CAAWC,GAA3C,CAAgD,CAC9C,MAAO,0CAAa,KAAKD,KAAL,CAAWE,YAAxB,CAAP,CACD,CAED,GAAI,CAAC,KAAKF,KAAL,CAAWE,YAAZ,EAA4B,KAAKF,KAAL,CAAWC,GAA3C,CAAgD,CAC9C;AACA,MAAO,qBAAC,aAAD,EAAe,GAAG,CAAE,KAAKD,KAAL,CAAWC,GAA/B,EAAP,CACD,CAED,MAAO,qBAAC,OAAD,EAAS,OAAO,CAAC,gCAAjB,EAAP,CACD,C,uCAEQ,CACP,MAAO,4BAAK,SAAS,CAAC,YAAf,EAA6B,KAAKY,aAAL,EAA7B,CAAP,CACD,C,iBA5BelB,KAAK,CAACmB,S,EA+BxBlB,QAAQ,CAACmB,MAAT,CAAgB,oBAAC,GAAD,MAAhB,CAAyBC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAzB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SeasonDisplay from \"./SeasonDisplay\";\nimport Spinner from \"./Spinner\";\n\nclass App extends React.Component {\n  state = { lat: null, errorMessage: \"\" };\n  // constructor(props) {\n  //   super(props);\n  //   this.state = { lat: null, errorMessage: \"\" };\n  // }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(\n      position => this.setState({ lat: position.coords.latitude }),\n      err => this.setState({ errorMessage: err.message })\n    );\n  }\n  renderContent() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return <div>Error: {this.state.errorMessage}</div>;\n    }\n\n    if (!this.state.errorMessage && this.state.lat) {\n      // return <div>Latitude: {this.state.lat}</div>;\n      return <SeasonDisplay lat={this.state.lat} />;\n    }\n\n    return <Spinner message=\"Please accept location request\" />;\n  }\n\n  render() {\n    return <div className=\"border red\">{this.renderContent()}</div>;\n  }\n}\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"]},"metadata":{},"sourceType":"module"}